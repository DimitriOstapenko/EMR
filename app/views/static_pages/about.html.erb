
  <h1>
    This is the home page for the
    <a href="<%= project_url  %>">Walk In EMR</a> project 
  </h1>

  Walk-In EMR web app is electronic medical records solution created to replace now defunct, functionally similar package from Health Screen Solutions.  
  Fully customizable, offering all the advantages of the web based system, EMR can be hosted on a dedicated linux server on/off-site, or using virtual hosting service like Heroku or Blue Ocean.
  EMR is fully secured with SHA-256 bit encryption using SSL. Built using Ruby on Rails with Postgres SQL back end, Walk-In EMR is very easy to use, tailored to busy walk-in clinic setting, and provides all basic functions of any EMR system including:
  <p>

  <ul>
   <dl>
    <dt>Patient management</dt>
    <dd>- You can easily add and modify patients records using many available fields. Search for patients by last name or ohip number. Generate PDF sticker for any patient in the database. Patient charts (PDF) are accessible from patient profile.</dd>
    
  <p>
    <dt>Visit management</dt>
    <dd>- Slide a card in card reader when patient walks in and you will get patient's form pre-filled with data read from the card, or existing patient profile. Card is validated in the process. Visit form (encounter) form) in PDF format is available for printing. Form is optional, generous notes data field is provided for people who prefer to enter data using computer or mobile device </dd>
    
  <p>
    <dt>Day Sheet</dt>
    <dd> This page shows current list of visits together with billing status. You can use datepicker control to select date in the past and access visits for that day</dd>
    
  <p>
    <dt>Daily Billing</dt>
    <dd> - Once diagnosis is established and procedures are assigned, visit is set as ready. These visits will be shown on billing page and available for export to EDT/CSV folder. Neutral CSV and standard MCEDT formats are supported. CSV is used with 3-rd party billing packages, while MCEDT files can be sent directly to the Ministry of Health server.</dd>
    
  <p>
    <dt>Doctor management</dt>
    <dd> - Add/delete/update doctor's records. Supports contact information, specialty, billing specifics, license info etc. Many local doctors are already in the system. </dd>
    
  <p>
    <dt>Procedures/Service codes</dt>
    <dd>  - Add/delete/update the list of more than 11000 current procedures. Set active flag for commonly used service codes to give them priority during selection. Code, price, units, description can all be updated.
    
  <p>
    <dt>Diagnoses</dt>
    <dd> - List of more than 1500 diagnoses. Add/delete/update diagnoses. </dd>
    
  <p>
    <dt>Medications, Vaccines</dt>
    <dd> - Provides comprehensive list of medications with specifics like dosage, strength, frequency, format etc. List can be easily customized by entering new medications.  </dd>
    
  <p>
    <dt> Insurance Providers</dt>
    <dd> - Provides long list of local insurance providers along with contact information. The list can be customized </dd>
    
  <p>
    <dt> Reports</dt>
    <dd> - Generate variety of reports based on doctor(s) and time frame selected. Save reports into database. Generate pdf reports.  </dd>
    
  <p>
    <dt> Invoices, Letters, Refferals, Patient charts, other documents</dt>
    <dd> - Administrative pages to manage all this info. Invoices, letters and referrals can be quickly generated from patient page. </dd>
  </dl>
  
  <p>
    <dt> Government Billing </dt>
    <dd> - Standard OHIP claim files are generated by the system; Batch, error and RA files are processed when available. Claim reconciliation. Doctor reports. Pay stubs. Clinic budget. </dd> 
  </dl>
  
  <p>
    <dt> Forms </dt>
    <dd> - Customizable forms section. Many types of forms can be uploaded and managed by the system. Forms specific to the clinic. Forms can be organized by many categories</dd> 
  </dl>

  <p>

  </ul>

  <p>

   3 User categories are supported: Staff, Doctor and Administrator. Each one has their own access rights and custom layout. Doctors and staff have no access to destructive functions or commands that could change historical data in any way. For example, visits that were already billed and sent to the government can not be changed in any way. Patients can not be deleted, etc.


